
@{
    ViewData["Title"] = "Boot Images";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Boot Images</h2>

<div ng-controller="BootImageController" ng-init="doConnect()">
    <p>
        &nbsp;&nbsp;
        <a href="#" class="btn btn-info btn-lg" ng-click="closeWindow()"><!--<span class="glyphicon glyphicon-circle-arrow-left"></span>&nbsp;&nbsp;-->Back</a>
        &nbsp;
        <a href="#" class="btn btn-info btn-lg" ng-click="doConnect()"><!--<span class="glyphicon glyphicon-repeat"></span>&nbsp;&nbsp;-->Refresh</a>
        &nbsp;
        <a href="#" class="btn btn-info btn-lg" ng-click="addImage()"><!--<span class="glyphicon glyphicon-plus"></span>&nbsp;&nbsp;-->Add</a>
        &nbsp;
        <a href="#" class="btn btn-info btn-lg" ng-click="deleteImage()" ng-show="(currentImageIndex >= 0)"><!--<span class="glyphicon glyphicon-list"></span>&nbsp;&nbsp;-->Delete</a>
        &nbsp;
        <a href="#" class="btn btn-info btn-lg" ng-click="enableDisableImage()" ng-show="(currentImageIndex >= 0)">{{(images[currentImageIndex].Enabled == true) ? 'Disable' : 'Enable'}}</a>
    </p>
    <br />
    <table class="table">
        <tr>
            <th></th>
            <th>Name</th>
            <th>Image Name</th>
            <th>File Name</th>
            <th>Description</th>
            <th>Enabled</th>
        </tr>
        <tr ng-repeat="image in images">
            <td>
                <input type="radio" class="radio" name="currentImage" ng-click="setCurrentImageIndex($index)" />
            </td>
            <td>{{image.Name}}</td>
            <td>{{image.ImageName}}</td>
            <td>{{image.FileName}}</td>
            <td>{{image.Description}}</td>
            <td>{{(image.Enabled == true) ? 'Yes' : 'No'}}</td>
        </tr>
    </table>
</div>
<script type="text/javascript">
        function createGuid() {
            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
                var r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);
                return v.toString(16);
            });
        }

        var valuePolicy = {
            AlphaNum: "alpha_num",
            Int: "int",
            Decimal: "decimal",
            DateTime: "datetime",
            Password: "password",
            DBCCase: "dbc_case"
        };

        function purgeValue(policy, source) {
            switch (policy) {
                case valuePolicy.AlphaNum:
                    {
                        source.value = source.value.replace(/[^a-zA-Z0-9_\-\.]/g, '');
                        break;
                    }
                case valuePolicy.Int:
                    {
                        source.value = source.value.replace(/[^\d]/g, '');
                        break;
                    }
                case valuePolicy.Decimal:
                    {
                        source.value = source.value.replace(/[^0-9\.]/g, '');
                        break;
                    }
                case valuePolicy.Password:
                    {
                        break;
                    }
                case valuePolicy.DBCCase:
                    {
                        source.value = source.value.replace(/[\uFF00-\uFFFF]/g, '');
                        source.value = source.value.replace(/[\u4E00-\u9FA5]/g, '');
                        break;
                    }
                default:
                    {
                        source.value = source.value.replace(/[\uFF00-\uFFFF]/g, '');
                        source.value = source.value.replace(/[\u4E00-\u9FA5]/g, '');
                        break;
                    }
            }
        }

        var settings = Settings.Data;

        var appModule = angular.module("WinMfgCloud", ['ngDialog']).controller("BootImageController",

        function ($scope, $location, $http, ngDialog) {

            $scope.images = [];

            $scope.currentDialog = null;

            $scope.newImage = null;

            //$scope.imageGroups = [];

            $scope.imageFiles = [];

            $scope.imageFileContents = [];

            $scope.currentImageIndex = -1;

            $scope.closeWindow = function () {
                event = new MessageEvent("CloseWindow", { "view": window, "bubbles": false, "cancelable": true, 'data': "Close" });
                document.dispatchEvent(event);
            };

            $scope.showProgress = function () {
                $scope.currentDialog = ngDialog.open({
                    scope: $scope,
                    className: 'ngdialog-theme-default',
                    template: '/assets/progress-template.html',//'<img src=\"/Content/progress_blue.gif\" height=\"26\" width=\"26\"/><br/><p>Processing, please wait...</p>',
                    //plain: true,
                    showClose: false,
                    closeByDocument: false,
                    closeByEscape: false,
                    width: 360,
                    preCloseCallback: function (value) {
                        return true;
                    }
                });
            };

            $scope.hideProgress = function () {
                ngDialog.closeAll();
            };

            //$scope.addImage - function () { };

            $scope.setCurrentImageIndex = function (index) {
                $scope.currentImageIndex = index;
            };

            $scope.doConnect = function (index) {

                $scope.showProgress();

                var url = settings.WdsApiUrl;

                var servicePoint = "wds/image/boot/all";

                $http.get(url + servicePoint).then(function (data) {
                    $scope.images.splice(0, $scope.images.length);

                    if (data != null && data.data != null && data.data != "") {
                        //$scope.images.splice(0, $scope.images.length);

                        if (data.data.length > 0) {
                            for (var i = 0; i < data.data.length; i++) {
                                $scope.images.push(data.data[i]);
                            }
                        }
                        else{
                            $scope.images.push(data.data);
                        }
                    }

                    $scope.hideProgress();
                });
            };

            //$scope.shouldShowAddButton = function () {
            //    return ($scope.images.length <= 0);
            //};

            //$scope.shouldShowRemoveButton = function () {
            //    return ($scope.images.length >= 1);
            //};

            $scope.getImageFiles = function () {
                var url = settings.WdsApiUrl;

                var servicePoint = "wds/imagefile/boot";

                $http.get(url + servicePoint).then(function (data) {
                    $scope.imageFiles.splice(0, $scope.imageFiles.length);

                    if (data != null && data.data != null && data.data != "")
                    {
                        //$scope.imageFiles.splice(0, $scope.imageFiles.length);

                        if (data.data.length > 0) {
                            for (var i = 0; i < data.data.length; i++) {
                                $scope.imageFiles.push(data.data[i]);
                            }
                        }
                        else {
                            $scope.imageFiles.push(data.data);
                        }
                    }
                });
            };

            $scope.getImageContents = function (index) {
                var url = settings.WdsApiUrl;

                var servicePoint = "wds/image/content/";

                var message = { Path: $scope.imageFiles[index] };

                $http.post((url + servicePoint), message).then(function (data)
                {
                    $scope.imageFileContents.splice(0, $scope.imageFileContents.length);

                    if (data != null && data.data != null && data.data != "")
                    {
                        //$scope.imageFileContents.splice(0, $scope.imageFileContents.length);

                        if (data.data.length > 0)
                        {
                            for (var i = 0; i < data.data.length; i++) {
                                $scope.imageFileContents.push(data.data[i]);
                            }

                        } else {
                            $scope.imageFileContents.push(data.data);
                        }
                    }
                });
            };

            $scope.addImage = function () {
                $scope.newImage = {
                    //ImageGroupName: "",
                    DisplayOrder: 0,
                    ImageFilePath: "",
                    NewImageName: "New_Image_" + createGuid(),
                    NewDescription: "New Image",
                    NewFileName: "",
                    RawImageNameInFile: "",
                    EnableMulticastTransmission: false,
                    MulticastTransmissionName: ""
                };

                //$scope.getImageGroups();

                $scope.getImageFiles();

                $scope.currentDialog = ngDialog.open({
                    scope: $scope,
                    className: 'ngdialog-theme-default',
                    template: '/assets/new-boot-image-template.html',//'<img src=\"/Content/progress_blue.gif\" height=\"26\" width=\"26\"/><br/><p>Processing, please wait...</p>',
                    //plain: true,
                    showClose: true,
                    closeByDocument: false,
                    closeByEscape: false,
                    width: 640,
                    preCloseCallback: function (value) {
                        return true;
                    }
                });
            };

            $scope.enableDisableImage = function () {
                var image = $scope.images[this.currentImageIndex];

                var imageName = image.ImageName;
                var architecture = "x86";

                if (image.Architecture == 3) {
                    architecture = "x64";
                }

                $scope.showProgress();

                var url = settings.WdsApiUrl;

                var body = { ImageName: imageName, Architecture: architecture };

                var flag = image.Enabled == true ? "disable" : "enable";

                var servicePoint = "wds/image/boot/" + flag;

                $http.patch((url + servicePoint), body).then(function (data) {
                    $scope.hideProgress();

                    if ((data.data != null) && (data.status == 200)) {

                        image.Enabled = (String(data.data.Enabled) == "true");
                    }
                    else {
                        alert(JSON.stringify(data));
                    }

                    $scope.setCurrentImageIndex(-1);

                }).catch(function (err) {
                    $scope.hideProgress();
                    alert(JSON.stringify(err));

                    $scope.setCurrentImageIndex(-1);
                });
            };

            $scope.deleteImage = function () {
                var image = $scope.images[this.currentImageIndex];

                var imageName = image.ImageName;
                var architecture = "x86";

                if (image.Architecture == 3) {
                    architecture = "x64";
                }

                if (image != null && confirm("Are you sure to permanently delete boot image \"" + imageName + "\"?")) {
                    $scope.showProgress();

                    var url = settings.WdsApiUrl;

                    var servicePoint = "wds/image/boot/" + architecture + "/" + imageName;

                    //alert(servicePoint);

                    $http.delete((url + servicePoint)).then(function (data) {
                        $scope.hideProgress();

                        if ((data.data == "") && (data.status == 200)) {
                            $scope.images.splice($scope.currentImageIndex, 1);
                        }
                        else {
                            alert(JSON.stringify(data));
                        }

                        $scope.setCurrentImageIndex(-1);

                    }).catch(function (err) {
                        $scope.hideProgress();
                        alert(JSON.stringify(err));

                        $scope.setCurrentImageIndex(-1);
                    });
                }
            };

            $scope.doSubmit = function () {
                ngDialog.closeAll();

                $scope.showProgress();

                var url = settings.WdsApiUrl;

                var servicePoint = "wds/image/boot";

                $scope.newImage.ImageFilePath = $scope.newImage.ImageFilePath.replace(/\//g, "\\");

                if (String($scope.newImage.NewFileName).endsWith(".wim") == false) {
                    $scope.newImage.NewFileName += ".wim";
                }

                if ($scope.newImage.EnableMulticastTransmission == true)
                {
                    $scope.newImage.MulticastTransmissionName = "MCT_" + $scope.newImage.NewImageName;
                }

                $http.post(url + servicePoint, $scope.newImage).then(function (data) {
                    if (data != null && data.data != null) {
                        if (data.data.length > 0) {
                            for (var i = 0; i < data.data.length; i++) {
                                $scope.images.push(data.data[i]);
                            }
                        }
                        else {
                            $scope.images.push(data.data);
                        }

                        $scope.hideProgress();
                    }
                });
            };
        });
</script>

