//      *********    DO NOT MODIFY THIS FILE     *********
//      This file is regenerated by a design tool. Making
//      changes to this file can cause errors.
namespace Expression.Blend.SampleData.OrderList
{
	using System; 

// To significantly reduce the sample data footprint in your production application, you can set
// the DISABLE_SAMPLE_DATA conditional compilation constant and disable sample data at runtime.
#if DISABLE_SAMPLE_DATA
	internal class Orders { }
#else

	public class Orders : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		public Orders()
		{
			try
			{
				System.Uri resourceUri = new System.Uri("/DIS;component/SampleData/OrderList/OrderList.xaml", System.UriKind.Relative);
				if (System.Windows.Application.GetResourceStream(resourceUri) != null)
				{
					System.Windows.Application.LoadComponent(this, resourceUri);
				}
			}
			catch (System.Exception)
			{
			}
		}

		private OrderCollection _OrderCollection = new OrderCollection();

		public OrderCollection OrderCollection
		{
			get
			{
				return this._OrderCollection;
			}
		}
	}

	public class Order : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		private string _oemreferencenumber = string.Empty;

		public string oemreferencenumber
		{
			get
			{
				return this._oemreferencenumber;
			}

			set
			{
				if (this._oemreferencenumber != value)
				{
					this._oemreferencenumber = value;
					this.OnPropertyChanged("oemreferencenumber");
				}
			}
		}

		private string _soldto = string.Empty;

		public string soldto
		{
			get
			{
				return this._soldto;
			}

			set
			{
				if (this._soldto != value)
				{
					this._soldto = value;
					this.OnPropertyChanged("soldto");
				}
			}
		}

		private string _shipto = string.Empty;

		public string shipto
		{
			get
			{
				return this._shipto;
			}

			set
			{
				if (this._shipto != value)
				{
					this._shipto = value;
					this.OnPropertyChanged("shipto");
				}
			}
		}

		private string _orderdate = string.Empty;

		public string orderdate
		{
			get
			{
				return this._orderdate;
			}

			set
			{
				if (this._orderdate != value)
				{
					this._orderdate = value;
					this.OnPropertyChanged("orderdate");
				}
			}
		}

		private string _msordernumber = string.Empty;

		public string msordernumber
		{
			get
			{
				return this._msordernumber;
			}

			set
			{
				if (this._msordernumber != value)
				{
					this._msordernumber = value;
					this.OnPropertyChanged("msordernumber");
				}
			}
		}

		private double _contractnumber = 0;

		public double contractnumber
		{
			get
			{
				return this._contractnumber;
			}

			set
			{
				if (this._contractnumber != value)
				{
					this._contractnumber = value;
					this.OnPropertyChanged("contractnumber");
				}
			}
		}

		private string _oemponumber = string.Empty;

		public string oemponumber
		{
			get
			{
				return this._oemponumber;
			}

			set
			{
				if (this._oemponumber != value)
				{
					this._oemponumber = value;
					this.OnPropertyChanged("oemponumber");
				}
			}
		}

		private string _oempodate = string.Empty;

		public string oempodate
		{
			get
			{
				return this._oempodate;
			}

			set
			{
				if (this._oempodate != value)
				{
					this._oempodate = value;
					this.OnPropertyChanged("oempodate");
				}
			}
		}

		private string _status = string.Empty;

		public string status
		{
			get
			{
				return this._status;
			}

			set
			{
				if (this._status != value)
				{
					this._status = value;
					this.OnPropertyChanged("status");
				}
			}
		}

		private string _errordetails = string.Empty;

		public string errordetails
		{
			get
			{
				return this._errordetails;
			}

			set
			{
				if (this._errordetails != value)
				{
					this._errordetails = value;
					this.OnPropertyChanged("errordetails");
				}
			}
		}

		private OrderCollection _OrderCollection = new OrderCollection();

		public OrderCollection OrderCollection
		{
			get
			{
				return this._OrderCollection;
			}
		}
	}

	public class OrderCollection : System.Collections.ObjectModel.ObservableCollection<Order>
	{ 
	}
#endif
}
