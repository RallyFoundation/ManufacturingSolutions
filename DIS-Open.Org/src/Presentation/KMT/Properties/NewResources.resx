<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Common_SaveFileTitle" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Common_View" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="Common_XmlFilter" xml:space="preserve">
    <value>txt files (*.xml)|*.xml</value>
  </data>
  <data name="ExportKeysViewModel_FinishTxt" xml:space="preserve">
    <value>You have exported {0} key(s) successfully.</value>
  </data>
  <data name="ExportKey_Encryptselect" xml:space="preserve">
    <value>Encrypted</value>
  </data>
  <data name="ExportKey_FileKeysTitle" xml:space="preserve">
    <value>The detail key(s) of  the Log File</value>
  </data>
  <data name="ExportKey_SelectSingle" xml:space="preserve">
    <value>Only one file can be Re-Exported at a time.</value>
  </data>
  <data name="ImportKey_RbKeytxt" xml:space="preserve">
    <value>Import Keys</value>
  </data>
  <data name="MainWindow_MarkAsFulfilled" xml:space="preserve">
    <value>Revert Keys</value>
  </data>
  <data name="MainWindow_Recall" xml:space="preserve">
    <value>Recall Key</value>
  </data>
  <data name="MainWindow_RecallKeys" xml:space="preserve">
    <value>Recall Keys</value>
  </data>
  <data name="ProcessDuplicateKeysViewModel_HadleIgnoreKeys" xml:space="preserve">
    <value>Ignore {0} successfully!</value>
  </data>
  <data name="RecallKeysViewModel_NotSelectKeys" xml:space="preserve">
    <value>Please select key(s) to recall!.</value>
  </data>
  <data name="RecallKeysViewModel_RecallKeysResult" xml:space="preserve">
    <value>You have recalled {0} key(s) successfully.</value>
  </data>
  <data name="RecallKeysViewModel_TxtRecallLog" xml:space="preserve">
    <value>You have recalled {0} keys.</value>
  </data>
  <data name="Common_Diagnostic" xml:space="preserve">
    <value>Diagnostic</value>
  </data>
  <data name="MarkFulfilledKeys_WindowTitle" xml:space="preserve">
    <value>Revert Keys</value>
  </data>
  <data name="SummaryView_MarkFulfilledPrompt" xml:space="preserve">
    <value>Summary of Revert :</value>
  </data>
  <data name="ExportKeysViewModel_ExportDuplicateCBRTxt" xml:space="preserve">
    <value>Export Duplicate CBR</value>
  </data>
  <data name="MainWindow_RemoveUser" xml:space="preserve">
    <value>Remove User</value>
  </data>
  <data name="ExportKey_NonEncryptMsg" xml:space="preserve">
    <value>Export file without encrypt is a high security risk, are you sure?</value>
  </data>
  <data name="Common_ColumnHeaderCustomerName" xml:space="preserve">
    <value>Customer  Name </value>
  </data>
  <data name="Common_ColumnHeaderCustomerNumber" xml:space="preserve">
    <value>Customer Number</value>
  </data>
  <data name="Common_ColumnHeaderType" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="WebServiceHostOrPortInvalid" xml:space="preserve">
    <value>Web service host or port is invalid!</value>
  </data>
  <data name="Diagnostic_InternalConnection" xml:space="preserve">
    <value>Connect to internal web service</value>
  </data>
  <data name="Diagnostic_MicrosoftConnection" xml:space="preserve">
    <value>Connect to Microsoft web service</value>
  </data>
  <data name="Diagnostic_Title" xml:space="preserve">
    <value>Diagnostic</value>
  </data>
  <data name="Diagnostic_ULSConnection" xml:space="preserve">
    <value>Connect to up level system</value>
  </data>
  <data name="Common_Copy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="Common_Exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="Diagnostic_Test" xml:space="preserve">
    <value>Test</value>
  </data>
  <data name="Diagnostic_TestingInternal" xml:space="preserve">
    <value>Testing connection to internal web service ...</value>
  </data>
  <data name="Diagnostic_TestingMicrosoft" xml:space="preserve">
    <value>Testing connection to Microsoft web service ...</value>
  </data>
  <data name="Diagnostic_TestingULS" xml:space="preserve">
    <value>Testing connection to up level system ...</value>
  </data>
  <data name="ExportKeys_ExportDuplicateCBR" xml:space="preserve">
    <value>Select Duplicate CBR Key(s)</value>
  </data>
  <data name="CommonDate_To" xml:space="preserve">
    <value>Fulfilled Date To</value>
  </data>
  <data name="KeyManagementViewModel_GetKeySuccess" xml:space="preserve">
    <value>Get {0} key(s) successfully !</value>
  </data>
  <data name="KeyManagementViewModel_NoKeyGet" xml:space="preserve">
    <value>No keys available.</value>
  </data>
  <data name="UpLevelSystemViewModel_SavingConfirm" xml:space="preserve">
    <value>Are you sure to change Up Level System settings?</value>
  </data>
  <data name="Exception_GetprivateKeyError" xml:space="preserve">
    <value>Certificate error,please try run it as administrator.</value>
  </data>
  <data name="Exception_ImportFileInvalid" xml:space="preserve">
    <value>The file content is not correct, please confirm it.</value>
  </data>
  <data name="Exception_PermissionsMsg" xml:space="preserve">
    <value>permissions error, please run it as administrator!</value>
  </data>
  <data name="ImportKey_FileNotExists" xml:space="preserve">
    <value>Import file cannot be found.</value>
  </data>
  <data name="Common_ColumnHeaderAckFileDate" xml:space="preserve">
    <value>Ack File Date</value>
  </data>
  <data name="Common_ColumnHeaderShipTo" xml:space="preserve">
    <value>Ship To</value>
  </data>
  <data name="Common_ColumnHeaderSoldTo" xml:space="preserve">
    <value>Sold To</value>
  </data>
  <data name="AssignKeysViewModel_AssignKeysLog" xml:space="preserve">
    <value>Have assigned {0} keys</value>
  </data>
  <data name="Exception_CertificateNotFound" xml:space="preserve">
    <value>Certificate Not Found!</value>
  </data>
  <data name="ExportKeysViewModel_ReExportKey" xml:space="preserve">
    <value>Re-export Keys</value>
  </data>
  <data name="ExportKeysViewModel_ReExportOA3Key" xml:space="preserve">
    <value>Re-export Keys for OA3Tool</value>
  </data>
  <data name="ExportKey_FileLocation" xml:space="preserve">
    <value>File location:</value>
  </data>
  <data name="CreateUserViewModel_RequriedLoginId" xml:space="preserve">
    <value>{0} is required!</value>
  </data>
  <data name="CreateUserViewModel_WrongEmailFormat" xml:space="preserve">
    <value>{0} format is invalid!</value>
  </data>
  <data name="CreateUserViewModel_WrongPhoneNumber" xml:space="preserve">
    <value>{0} format is invalid!</value>
  </data>
  <data name="Common_ColumnHeaderPassword" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Common_ColumnHeaderPhone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="ReportKeysViewModel_ReportKeysTitle" xml:space="preserve">
    <value>Report Keys</value>
  </data>
  <data name="Common_InternalErrorFormat" xml:space="preserve">
    <value>Internal web service returned error : {0}.</value>
  </data>
  <data name="ExportKey_LimitQualityMsg" xml:space="preserve">
    <value>The export quality more than 5000 keys </value>
  </data>
  <data name="ImportKeysViewModel_ImportDuplicateCBRTxt" xml:space="preserve">
    <value>Import  Duplicate CBR</value>
  </data>
  <data name="KeyManagementViewModel_DuplicateCBRsMessage" xml:space="preserve">
    <value>You have {0} duplicated CBR(s)</value>
  </data>
  <data name="ImportKeysViewModel_ImportDuplicatedCBRTxt" xml:space="preserve">
    <value>Duplicated CBR {0} was import.</value>
  </data>
  <data name="ExportKeysViewModel_ExportCBRTxt" xml:space="preserve">
    <value>Export CBR</value>
  </data>
  <data name="ImportKey_SourceFromError" xml:space="preserve">
    <value>The File Keys is not from current UP lever Source,please confirm it!</value>
  </data>
</root>