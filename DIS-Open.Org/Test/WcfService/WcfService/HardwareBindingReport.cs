//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace WcfService
{
    public partial class HardwareBindingReport
    {
        #region Primitive Properties
    
        public virtual long ProductKeyID
        {
            get { return _productKeyID; }
            set
            {
                if (_productKeyID != value)
                {
                    if (ProductKeyInfo != null && ProductKeyInfo.ProductKeyID != value)
                    {
                        ProductKeyInfo = null;
                    }
                    _productKeyID = value;
                }
            }
        }
        private long _productKeyID;
    
        public virtual string HardwareHash
        {
            get;
            set;
        }
    
        public virtual string OEMOptionalInfo
        {
            get;
            set;
        }
    
        public virtual Nullable<bool> Status
        {
            get;
            set;
        }
    
        public virtual System.Guid CustomerReportUniqueID
        {
            get { return _customerReportUniqueID; }
            set
            {
                if (_customerReportUniqueID != value)
                {
                    if (ComputerBuildReport != null && ComputerBuildReport.CustomerReportUniqueID != value)
                    {
                        ComputerBuildReport = null;
                    }
                    _customerReportUniqueID = value;
                }
            }
        }
        private System.Guid _customerReportUniqueID;
    
        public virtual string ReasonCode
        {
            get;
            set;
        }
    
        public virtual string ReasonCodeDescription
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual ComputerBuildReport ComputerBuildReport
        {
            get { return _computerBuildReport; }
            set
            {
                if (!ReferenceEquals(_computerBuildReport, value))
                {
                    var previousValue = _computerBuildReport;
                    _computerBuildReport = value;
                    FixupComputerBuildReport(previousValue);
                }
            }
        }
        private ComputerBuildReport _computerBuildReport;
    
        public virtual ProductKeyInfo ProductKeyInfo
        {
            get { return _productKeyInfo; }
            set
            {
                if (!ReferenceEquals(_productKeyInfo, value))
                {
                    var previousValue = _productKeyInfo;
                    _productKeyInfo = value;
                    FixupProductKeyInfo(previousValue);
                }
            }
        }
        private ProductKeyInfo _productKeyInfo;

        #endregion

        #region Association Fixup
    
        private void FixupComputerBuildReport(ComputerBuildReport previousValue)
        {
            if (previousValue != null && previousValue.HardwareBindingReports.Contains(this))
            {
                previousValue.HardwareBindingReports.Remove(this);
            }
    
            if (ComputerBuildReport != null)
            {
                if (!ComputerBuildReport.HardwareBindingReports.Contains(this))
                {
                    ComputerBuildReport.HardwareBindingReports.Add(this);
                }
                if (CustomerReportUniqueID != ComputerBuildReport.CustomerReportUniqueID)
                {
                    CustomerReportUniqueID = ComputerBuildReport.CustomerReportUniqueID;
                }
            }
        }
    
        private void FixupProductKeyInfo(ProductKeyInfo previousValue)
        {
            if (previousValue != null && previousValue.HardwareBindingReports.Contains(this))
            {
                previousValue.HardwareBindingReports.Remove(this);
            }
    
            if (ProductKeyInfo != null)
            {
                if (!ProductKeyInfo.HardwareBindingReports.Contains(this))
                {
                    ProductKeyInfo.HardwareBindingReports.Add(this);
                }
                if (ProductKeyID != ProductKeyInfo.ProductKeyID)
                {
                    ProductKeyID = ProductKeyInfo.ProductKeyID;
                }
            }
        }

        #endregion

    }
}
