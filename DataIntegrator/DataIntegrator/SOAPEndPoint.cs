//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using DataIntegrator.Helpers.HTTP;

namespace DataIntegrator
{
    public class SOAPEndPoint : EndPoint
    {
        public override object[] Connect(params object[] Parameters)
        {
            //return base.Connect(Parameters);

            HTTPHelper helper = new HTTPHelper();

            string operationName = Parameters[0] != null ? Parameters[0].ToString() : null;

            Operation operation = !String.IsNullOrEmpty(operationName) ? this.GetOperation(operationName) : this.GetOperation(0);

            string message = Parameters[1] != null ? Parameters[1].ToString() : operation.Message;

            helper.EnableTracing = ((!String.IsNullOrEmpty(operation.GetArgumentValue("EnableTracing"))) && (operation.GetArgumentValue("EnableTracing").ToLower() == "true"));
            helper.TraceSourceName = operation.GetArgumentValue("TraceSourceName");

            Dictionary<string, string> headers = null;

            //if (operation.GetArgumentValue("SOAPAction") != null)
            //{
            //    headers = new Dictionary<string, string>();
            //    headers.Add("SOAPAction", operation.GetArgumentValue("SOAPAction"));
            //}

            IDictionary<string, object> headerArgs = operation.GetArguments("HttpHeader");

            if (headerArgs != null)
            {
                headers = new Dictionary<string, string>();

                foreach (string headerName in headerArgs.Keys)
                {
                    if ((!headers.ContainsKey(headerName)) && (headerArgs[headerName] != null))
                    {
                        headers.Add(headerName, headerArgs[headerName].ToString());
                    }
                }
            }

            return new object[] { helper.Post(this.Address, message, this.Authentication, headers) };
        }
    }
}

